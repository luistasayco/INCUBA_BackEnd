<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiIncuba</name>
    </assembly>
    <members>
        <member name="M:Net.Business.Services.Controllers.AgujaController.GetAll(Net.Business.DTO.DtoFindAguja)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.AgujaController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.AgujaController.Create(Net.Business.DTO.DtoInsertAguja)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.AgujaController.Update(Net.Business.DTO.DtoUpdateAguja)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.AgujaController.Delete(Net.Business.DTO.DtoDeleteAguja)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.BoquillaController.GetAll(Net.Business.DTO.DtoFindBoquilla)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.BoquillaController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.BoquillaController.Create(Net.Business.DTO.DtoInsertBoquilla)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.BoquillaController.Update(Net.Business.DTO.DtoUpdateBoquilla)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.BoquillaController.Delete(Net.Business.DTO.DtoDeleteBoquilla)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.CalidadController.GetAll(Net.Business.DTO.DtoFindCalidad)">
            <summary>
            Obtener lista de calidad
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.CalidadController.GetbyId(System.Int32)">
            <summary>
            Obtener una calidad individual
            </summary>
            <param name="id">Id de Calidad</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.CalidadController.Create(Net.Business.DTO.DtoInsertCalidad)">
            <summary>
            Crear una nueva calidad
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.CalidadController.Update(Net.Business.DTO.DtoUpdateCalidad)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.CalidadController.Delete(Net.Business.DTO.DtoDeleteCalidad)">
             <summary>
             Eliminar logicamente una calidad
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.CondicionLimpiezaController.GetAll(Net.Business.DTO.DtoFindCondicionLimpieza)">
            <summary>
            Obtener lista de Condicion Limpieza
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.CondicionLimpiezaController.GetbyId(System.Int32)">
            <summary>
            Obtener un Condicion Limpieza individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.CondicionLimpiezaController.Create(Net.Business.DTO.DtoInsertCondicionLimpieza)">
            <summary>
            Crear un nuevo Condicion Limpieza
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.CondicionLimpiezaController.Update(Net.Business.DTO.DtoUpdateCondicionLimpieza)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.CondicionLimpiezaController.Delete(Net.Business.DTO.DtoDeleteCondicionLimpieza)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.EmpresaController.GetAll(Net.Business.DTO.DtoFindEmpresa)">
            <summary>
            Obtener lista de Empresa
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.EquipoController.GetAll(Net.Business.DTO.DtoFindGeneral)">
            <summary>
            Obtener lista de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.EquipoController.GetAllPorFiltros(Net.Business.DTO.DtoFindGeneral)">
            <summary>
            Obtener lista de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.EquipoPorModeloController.GetAllSeleccionado(Net.Business.DTO.DtoFindEquipoPorModelo)">
            <summary>
            Obtener lista de equipos por seleccionar
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista de equipos faltantes por seleccionar</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.IndiceEficienciaController.GetAll(Net.Business.DTO.DtoFindIndiceEficiencia)">
            <summary>
            Obtener lista de registros
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.IndiceEficienciaController.GetbyIdOpcion(System.Int32)">
            <summary>
            Obtener un registro individual segun el ID
            </summary>
            <param name="id">Id de Usuarii</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.IndiceEficienciaController.Create(Net.Business.DTO.DtoInsertIndiceEficiencia)">
            <summary>
            Crear una nueva registro
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.IndiceEficienciaController.Update(Net.Business.DTO.DtoUpdateIndiceEficiencia)">
            <summary>
            Actualizar un registro existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.IndiceEficienciaController.Delete(Net.Business.DTO.DtoDeleteIndiceEficiencia)">
             <summary>
             Eliminar un registro existente
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.IrregularidadController.GetAll(Net.Business.DTO.DtoFindIrregularidad)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.IrregularidadController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.IrregularidadController.Create(Net.Business.DTO.DtoInsertIrregularidad)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.IrregularidadController.Update(Net.Business.DTO.DtoUpdateIrregularidad)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.IrregularidadController.Delete(Net.Business.DTO.DtoDeleteIrregularidad)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoController.GetAll(Net.Business.DTO.DtoFindMantenimiento)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoController.Create(Net.Business.DTO.DtoInsertMantenimiento)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoController.Update(Net.Business.DTO.DtoUpdateMantenimiento)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoController.Delete(Net.Business.DTO.DtoDeleteMantenimiento)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoPorModeloController.GetAll(Net.Business.DTO.DtoFindMantenimientoPorModelo)">
            <summary>
            Obtener lista de Mantenimiento Por Modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoPorModeloController.GetAllSeleccionado(Net.Business.DTO.DtoFindMantenimientoPorModelo)">
            <summary>
            Obtener lista de Mantenimiento Por Modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoPorModeloController.GetAllPorSeleccionar(Net.Business.DTO.DtoFindMantenimientoPorModelo)">
            <summary>
            Obtener lista de Mantenimiento Por Modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoPorModeloController.Create(System.Collections.Generic.List{Net.Business.DTO.DtoInsertMantenimientoPorModelo})">
            <summary>
            Crear un nuevo Mantenimiento Por Modelo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.MantenimientoPorModeloController.Delete(System.Collections.Generic.List{Net.Business.DTO.DtoDeleteMantenimientoPorModelo})">
             <summary>
             Eliminar registro de Mantenimiento Por Modelo 
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ModeloController.GetAll(Net.Business.DTO.DtoFindModelo)">
            <summary>
            Obtener lista de modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.PlantaController.GetAllPlantaPorEmpesa(Net.Business.DTO.DtoFindPlanta)">
            <summary>
            Obtener lista de Planta
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.PlantaController.GetAllPlanta(Net.Business.DTO.DtoFindPlantaAll)">
            <summary>
            Obtener lista de Planta
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoController.GetAll(Net.Business.DTO.DtoFindProceso)">
            <summary>
            Obtener lista de Proceso
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoController.GetbyId(System.Int32)">
            <summary>
            Obtener una Proceso individual
            </summary>
            <param name="id">Id de Calidad</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoController.Create(Net.Business.DTO.DtoInsertProceso)">
            <summary>
            Crear un nuevo proceso
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoController.Update(Net.Business.DTO.DtoUpdateProceso)">
            <summary>
            Actualizar una proceso existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoController.Delete(Net.Business.DTO.DtoDeleteProceso)">
             <summary>
             Eliminar logicamente una proceso
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleController.GetAll(Net.Business.DTO.DtoFindProcesoDetalle)">
            <summary>
            Obtener lista de proceso
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleController.GetbyId(System.Int32)">
            <summary>
            Obtener una proceso individual
            </summary>
            <param name="id">Id de Calidad</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleController.Create(Net.Business.DTO.DtoInsertProcesoDetalle)">
            <summary>
            Crear una nueva ProcesoDetalle
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleController.Update(Net.Business.DTO.DtoUpdateProcesoDetalle)">
            <summary>
            Actualizar una ProcesoDetalle existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleController.Delete(Net.Business.DTO.DtoDeleteProcesoDetalle)">
             <summary>
             Eliminar logicamente una ProcesoDetalle
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSprayController.GetAll(Net.Business.DTO.DtoFindProcesoDetalleSpray)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSprayController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSprayController.Create(Net.Business.DTO.DtoInsertProcesoDetalleSpray)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSprayController.Update(Net.Business.DTO.DtoUpdateProcesoDetalleSpray)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSprayController.Delete(Net.Business.DTO.DtoDeleteProcesoDetalleSpray)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSubCutaneaController.GetAll(Net.Business.DTO.DtoFindProcesoDetalleSubCutanea)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSubCutaneaController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSubCutaneaController.Create(Net.Business.DTO.DtoInsertProcesoDetalleSubCutanea)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSubCutaneaController.Update(Net.Business.DTO.DtoUpdateProcesoDetalleSubCutanea)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoDetalleSubCutaneaController.Delete(Net.Business.DTO.DtoDeleteProcesoDetalleSubCutanea)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSprayController.GetAll(Net.Business.DTO.DtoFindProcesoSpray)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSprayController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSprayController.Create(Net.Business.DTO.DtoInsertProcesoSpray)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSprayController.Update(Net.Business.DTO.DtoUpdateProcesoSpray)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSprayController.Delete(Net.Business.DTO.DtoDeleteProcesoSpray)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSubCutaneaController.GetAll(Net.Business.DTO.DtoFindProcesoSubCutanea)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSubCutaneaController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSubCutaneaController.Create(Net.Business.DTO.DtoInsertProcesoSubCutanea)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSubCutaneaController.Update(Net.Business.DTO.DtoUpdateProcesoSubCutanea)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.ProcesoSubCutaneaController.Delete(Net.Business.DTO.DtoDeleteProcesoSubCutanea)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.RepuestoPorModeloController.GetAll(Net.Business.DTO.DtoFindRepuestoPorModelo)">
            <summary>
            Obtener lista de Repuesto Por Modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.RepuestoPorModeloController.GetAllSeleccionado(Net.Business.DTO.DtoFindRepuestoPorModelo)">
            <summary>
            Obtener lista de Repuesto Por Modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.RepuestoPorModeloController.GetAllPorSeleccionar(Net.Business.DTO.DtoFindRepuestoPorModelo)">
            <summary>
            Obtener lista de Repuesto Por Modelo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.RepuestoPorModeloController.Create(System.Collections.Generic.List{Net.Business.DTO.DtoInsertRepuestoPorModelo})">
            <summary>
            Crear una nueva Repuesto Por Modelo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.RepuestoPorModeloController.Delete(System.Collections.Generic.List{Net.Business.DTO.DtoDeleteRepuestoPorModelo})">
             <summary>
             Eliminar logicamente una Repuesto Por Modelo
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.RequerimientoEquipoController.GetAll(Net.Business.DTO.DtoFindRequerimientoEquipo)">
            <summary>
            Obtener lista de RequerimientoEquipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.RequerimientoEquipoController.GetbyId(System.Int32)">
            <summary>
            Obtener un RequerimientoEquipo
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.RequerimientoEquipoController.Create(Net.Business.DTO.DtoInsertRequerimientoEquipo)">
            <summary>
            Crear un nuevo RequerimientoEquipo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.RequerimientoEquipoController.Update(Net.Business.DTO.DtoUpdateRequerimientoEquipo)">
            <summary>
            Actualizar un RequerimientoEquipo
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.RequerimientoEquipoController.Delete(Net.Business.DTO.DtoDeleteRequerimientoEquipo)">
             <summary>
             Eliminar registro de RequerimientoEquipo
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.SubTipoExplotacionController.GetAll(Net.Business.DTO.DtoFindSubTipoExplotacion)">
            <summary>
            Obtener lista de calidad
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.SubTipoExplotacionController.GetAllPorUsuario(Net.Business.DTO.DtoFindSubTipoExplotacionPorUsuario)">
            <summary>
            Obtener lista de calidad
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.SubTipoExplotacionController.GetbyIdSubTipoExplotacion(System.Int32)">
            <summary>
            Obtener una calidad individual
            </summary>
            <param name="id">Id de Calidad</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.SubTipoExplotacionController.Create(Net.Business.DTO.DtoInsertSubTipoExplotacion)">
            <summary>
            Crear un nuevo registro
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.SubTipoExplotacionController.Update(Net.Business.DTO.DtoUpdateSubTipoExplotacion)">
            <summary>
            Actualizar registro existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.SubTipoExplotacionController.Delete(Net.Business.DTO.DtoDeleteSubTipoExplotacion)">
             <summary>
             Eliminar logicamente un registro
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TipoExplotacionController.GetAll(Net.Business.DTO.DtoFindTipoExplotacion)">
            <summary>
            Obtener lista
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TipoExplotacionController.GetAllPorUsuario(Net.Business.DTO.DtoFindTipoExplotacionPorUsuario)">
            <summary>
            Obtener lista
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TipoExplotacionController.GetbyIdTipoExplotacion(System.Int32)">
            <summary>
            Obtener una calidad individual
            </summary>
            <param name="id">Id de Calidad</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TipoExplotacionController.Create(Net.Business.DTO.DtoInsertTipoExplotacion)">
            <summary>
            Crear una nueva calidad
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TipoExplotacionController.Update(Net.Business.DTO.DtoUpdateTipoExplotacion)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TipoExplotacionController.Delete(Net.Business.DTO.DtoDeleteTipoExplotacion)">
             <summary>
             Eliminar logicamente una calidad
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.GetAll(Net.Business.DTO.DtoFindTxExamenFisicoPollitoPorFiltro)">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.GetByDetalleNew">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.GetByIdTxExamenFisicoPollito(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>g
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.GetByIdTxExamenFisicoPollitoNew">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param>Id</param>g
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.Create(Net.Business.DTO.DtoInsertTxExamenFisicoPollito)">
            <summary>
            Crear un informe de registro de equipo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.Update(Net.Business.DTO.DtoUpdateTxExamenFisicoPollito)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.UpdateStatus(Net.Business.DTO.DtoUpdateStatusTxExamenFisicoPollito)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.Delete(Net.Business.DTO.DtoDeleteTxExamenFisicoPollito)">
             <summary>
             Eliminar registro de Mantenimiento Por Modelo 
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxExamenFisicoPollitoController.GetGeneraPdfByIdTxExamenFisicoPollito(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.GetAll(Net.Business.DTO.DtoFindTxRegistroDocumento)">
            <summary>
            Obtener lista de calidad
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de Calidad registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.GetAllEmpresaPorUsuario(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.GetGoogleDriveFilesPorId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.GetByIdDocumento(System.Int32)">
            <summary>
            Obtener un registro
            </summary>
            <param name="id">Id de Calidad</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.Create(System.String,System.Collections.Generic.IList{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Crear una nueva calidad
            </summary>
            <param name="value"></param>
            <param name="archivo"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.CreateFiles(System.String,System.Collections.Generic.IList{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Crear una nueva calidad
            </summary>
            <param name="value"></param>
            <param name="archivo"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.UpdateStatus(Net.Business.DTO.DtoUpdateStatusTxRegistroDocumento)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.Delete(Net.Business.DTO.DtoDeleteTxRegistroDocumento)">
             <summary>
             Eliminar logicamente una calidad
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroDocumentoController.GetDownloadFile(System.String)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.GetAll(Net.Business.DTO.DtoFindTxRegistroEquipo)">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.GetNewObject(Net.Business.DTO.DtoFindGeneral)">
            <summary>
            Obtener un nuevo modelo para registrar
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.GetByIdTxRegistroEquipo(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>g
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.Create(Net.Business.DTO.DtoInsertTxRegistroEquipo)">
            <summary>
            Crear un informe de registro de equipo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.Update(Net.Business.DTO.DtoUpdateTxRegistroEquipo)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.UpdateStatus(Net.Business.DTO.DtoUpdateStatusTxRegistroEquipo)">
            <summary>
            Actualizar un registro existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.Delete(Net.Business.DTO.DtoDeleteTxRegistroEquipo)">
             <summary>
             Eliminar registro de Mantenimiento Por Modelo 
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxRegistroEquipoController.GetGeneraPdfByIdTxRegistroEquipo(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.GetAll(Net.Business.DTO.DtoFindTxVacunacionSpray)">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.GetByDetalleNew">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name = "value" > Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code = "200" > Devuelve el listado completo</response>
            <response code = "404" > Si no existen datos</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.GetByIdTxVacunacionSpray(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>g
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.Create(Net.Business.DTO.DtoInsertTxVacunacionSpray)">
            <summary>
            Crear un informe de registro de equipo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.Update(Net.Business.DTO.DtoUpdateTxVacunacionSpray)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.UpdateStatus(Net.Business.DTO.DtoUpdateStatusTxVacunacionSpray)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.Delete(Net.Business.DTO.DtoDeleteTxVacunacionSpray)">
             <summary>
             Eliminar registro de Mantenimiento Por Modelo 
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSprayController.GetGeneraPdfByIdTxVacunacionSpray(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.GetAll(Net.Business.DTO.DtopFindTxVacunacionSubCutanea)">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.GetByDetalleNew">
            <summary>
            Obtener lista de registro de equipo
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.GetByIdTxVacunacionSubCutanea(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>g
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.Create(Net.Business.DTO.DtoInsertTxVacunacionSubCutanea)">
            <summary>
            Crear un informe de registro de equipo
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.Update(Net.Business.DTO.DtoUpdateTxVacunacionSubCutanea)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.UpdateStatus(Net.Business.DTO.DtoUpdateStatusTxVacunacionSubCutanea)">
            <summary>
            Actualizar una calidad existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.Delete(Net.Business.DTO.DtoDeleteTxVacunacionSubCutanea)">
             <summary>
             Eliminar registro de Mantenimiento Por Modelo 
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.TxVacunacionSubCutaneaController.GetGeneraPdfByIdTxVacunacionSpray(System.Int32)">
            <summary>
            Obtener un TxRegistro Equipo
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.VacunaController.GetAll(Net.Business.DTO.DtoFindVacuna)">
            <summary>
            Obtener lista de mantenimiento
            </summary>
            <param name="value">Este es el cuerpo para enviar los parametros</param>
            <returns>Lista del maestro de mantenimiento registrado</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>   
        </member>
        <member name="M:Net.Business.Services.Controllers.VacunaController.GetbyId(System.Int32)">
            <summary>
            Obtener un mantenimiento individual
            </summary>
            <param name="id">Id</param>
            <returns>Devuelve un solo registro</returns>
            <response code="200">Devuelve el listado completo </response>
            <response code="404">Si no existen datos</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.VacunaController.Create(Net.Business.DTO.DtoInsertVacuna)">
            <summary>
            Crear un nuevo mantenimiento
            </summary>
            <param name="value"></param>
            <returns>Id del registro creado</returns>
            <response code="201">Devuelve el elemento recién creado</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>  
            <response code="500">Algo salio mal guardando el registro</response>  
        </member>
        <member name="M:Net.Business.Services.Controllers.VacunaController.Update(Net.Business.DTO.DtoUpdateVacuna)">
            <summary>
            Actualizar un mantenimiento existente
            </summary>
            <param name="value"></param>
            <returns></returns>
            <response code="204">Actualizado Satisfactoriamente</response>
            <response code="404">Si el objeto enviado es nulo o invalido</response>
        </member>
        <member name="M:Net.Business.Services.Controllers.VacunaController.Delete(Net.Business.DTO.DtoDeleteVacuna)">
             <summary>
             Eliminar registro de mantenimiento
             </summary>
             <param name="value"></param>
             <returns></returns>
            <response code="204">Eliminado Satisfactoriamente</response>
            <response code="400">Si el objeto enviado es nulo o invalido</response>
            <response code="409">Si ocurrio un conflicto</response>
        </member>
    </members>
</doc>
